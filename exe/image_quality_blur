#!/usr/bin/env python3
import cv2
import sys
import numpy as np

img = cv2.imread(sys.argv[1])
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
faces_detect = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4)

if len(faces_detect) == 0:
    print('{"error": "no faces found"}')
    exit(1)
for (x, y, w, h) in faces_detect:
    # cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
    face = img[y:y + h, x:x + w]

cv2.imwrite('/home/local/PDC01/swi/Projects/empfehlungsbund/public/test.jpg', face)

# https://stackoverflow.com/questions/7765810/is-there-a-way-to-detect-if-an-image-is-blurry/29270276#29270276
gray = cv2.cvtColor(face, cv2.COLOR_BGR2GRAY)
local = np.max(cv2.convertScaleAbs(cv2.Laplacian(gray,3)))

laplace = cv2.Laplacian(face, cv2.CV_64F).var()
print("{")
print('  "Laplace (% 0..100)": ' + str(local / 255 * 100) + ",")
print('  "Laplace (blurry)": ' + str(laplace))
print("}")
